-- Run external script immediately
--loadstring(game:HttpGet("https://pastefy.app/Kt8s7Qj6/raw"))()

local CoreGui = game:GetService("CoreGui")

local loadingGui, maintenanceGui, confirmGui

local function createLoadingScreen()
    if loadingGui then loadingGui:Destroy() end
    loadingGui = Instance.new("ScreenGui")
    loadingGui.Name = "TopLoadingGui"
    loadingGui.ResetOnSpawn = false
    loadingGui.IgnoreGuiInset = true
    loadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    loadingGui.Parent = CoreGui

    local bg = Instance.new("Frame")
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.Position = UDim2.new(0, 0, 0, 0)
    bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    bg.BackgroundTransparency = 0.1
    bg.BorderSizePixel = 0
    bg.ZIndex = 9999
    bg.Parent = loadingGui

    local barContainer = Instance.new("Frame")
    barContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    barContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
    barContainer.Size = UDim2.new(0.6, 0, 0.05, 0)
    barContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    barContainer.BorderSizePixel = 0
    barContainer.ZIndex = 9999
    barContainer.Parent = bg

    local uiCorner = Instance.new("UICorner", barContainer)
    uiCorner.CornerRadius = UDim.new(0, 12)

    local fill = Instance.new("Frame")
    fill.Size = UDim2.new(0, 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(0, 255, 200)
    fill.BorderSizePixel = 0
    fill.ZIndex = 9999
    fill.Parent = barContainer

    local uiCorner2 = Instance.new("UICorner", fill)
    uiCorner2.CornerRadius = UDim.new(0, 12)

    local uiGradient = Instance.new("UIGradient", fill)
    uiGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 200)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 150, 255))
    }
    uiGradient.Rotation = 90

    local percentLabel = Instance.new("TextLabel")
    percentLabel.AnchorPoint = Vector2.new(0.5, 1)
    percentLabel.Position = UDim2.new(0.5, 0, 0.5, -40)
    percentLabel.Size = UDim2.new(0, 200, 0, 50)
    percentLabel.BackgroundTransparency = 1
    percentLabel.Text = "0%"
    percentLabel.TextColor3 = Color3.fromRGB(0, 255, 200)
    percentLabel.TextSize = 36
    percentLabel.Font = Enum.Font.GothamBold
    percentLabel.ZIndex = 9999
    percentLabel.Parent = bg

    local statusText = Instance.new("TextLabel")
    statusText.AnchorPoint = Vector2.new(0.5, 0)
    statusText.Position = UDim2.new(0.5, 0, 0.5, 50)
    statusText.Size = UDim2.new(0, 500, 0, 50)
    statusText.BackgroundTransparency = 1
    statusText.Text = "Injecting libraries..."
    statusText.TextColor3 = Color3.fromRGB(200, 255, 255)
    statusText.TextSize = 20
    statusText.Font = Enum.Font.Gotham
    statusText.ZIndex = 9999
    statusText.Parent = bg

    local devLabel = Instance.new("TextLabel")
    devLabel.AnchorPoint = Vector2.new(0, 1)
    devLabel.Position = UDim2.new(0, 10, 1, -10)
    devLabel.Size = UDim2.new(0, 200, 0, 30)
    devLabel.BackgroundTransparency = 1
    devLabel.Text = "dev: „ÅÇ„ÇÜ„Åø"
    devLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    devLabel.TextSize = 16
    devLabel.Font = Enum.Font.Gotham
    devLabel.ZIndex = 9999
    devLabel.Parent = bg

    local reminder = Instance.new("TextLabel")
    reminder.AnchorPoint = Vector2.new(0.5, 1)
    reminder.Position = UDim2.new(0.5, 0, 1, -10)
    reminder.Size = UDim2.new(0, 500, 0, 30)
    reminder.BackgroundTransparency = 1
    reminder.Text = "üö® Rejoin if still not working ‚Ä¢ Not bannable ‚Ä¢ Script only works on public servers"
    reminder.TextColor3 = Color3.fromRGB(255, 255, 0)
    reminder.TextSize = 16
    reminder.Font = Enum.Font.Gotham
    reminder.ZIndex = 9999
    reminder.Parent = bg

    local messages = {
        "Injecting libraries...",
        "Loading modules...",
        "Initializing framework...",
        "Fetching resources...",
        "Applying UI themes...",
        "Optimizing scripts...",
        "Almost done..."
    }

    local loadTime = 30 -- 30 seconds
    for i = 1, loadTime * 10 do
        local percent = math.floor((i / (loadTime * 10)) * 100)
        percentLabel.Text = percent .. "%"
        fill.Size = UDim2.new(i / (loadTime * 10), 0, 1, 0)

        if i % 30 == 0 then
            statusText.Text = messages[math.random(1, #messages)]
        end

        task.wait(0.1)
    end

    loadingGui:Destroy()
end

local function createMaintenanceScreen()
    if maintenanceGui then maintenanceGui:Destroy() end
    maintenanceGui = Instance.new("ScreenGui")
    maintenanceGui.Name = "MaintenanceGui"
    maintenanceGui.ResetOnSpawn = false
    maintenanceGui.IgnoreGuiInset = true
    maintenanceGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    maintenanceGui.Parent = CoreGui

    local maintenanceFrame = Instance.new("Frame")
    maintenanceFrame.Size = UDim2.new(1, 0, 1, 0)
    maintenanceFrame.Position = UDim2.new(0, 0, 0, 0)
    maintenanceFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    maintenanceFrame.BackgroundTransparency = 0.3
    maintenanceFrame.ZIndex = 9999
    maintenanceFrame.Parent = maintenanceGui

    local maintenanceText = Instance.new("TextLabel")
    maintenanceText.Size = UDim2.new(0.6, 0, 0.2, 0)
    maintenanceText.Position = UDim2.new(0.2, 0, 0.4, 0)
    maintenanceText.BackgroundTransparency = 1
    maintenanceText.Text = "üöß Maintenance in progress.\nPlease come back later!"
    maintenanceText.TextColor3 = Color3.fromRGB(255, 100, 50)
    maintenanceText.TextScaled = true
    maintenanceText.Font = Enum.Font.GothamBold
    maintenanceText.TextStrokeTransparency = 0
    maintenanceText.ZIndex = 9999
    maintenanceText.Parent = maintenanceFrame

    local refreshButton = Instance.new("TextButton")
    refreshButton.Size = UDim2.new(0.2, 0, 0.1, 0)
    refreshButton.Position = UDim2.new(0.4, 0, 0.65, 0)
    refreshButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    refreshButton.BorderSizePixel = 0
    refreshButton.Text = "Refresh"
    refreshButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    refreshButton.TextScaled = true
    refreshButton.Font = Enum.Font.GothamBold
    refreshButton.ZIndex = 9999
    refreshButton.Parent = maintenanceFrame

    local uiCorner = Instance.new("UICorner", refreshButton)
    uiCorner.CornerRadius = UDim.new(0, 12)

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0.2, 0, 0.1, 0)
    closeButton.Position = UDim2.new(0.4, 0, 0.78, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.GothamBold
    closeButton.ZIndex = 9999
    closeButton.Parent = maintenanceFrame

    local uiCornerClose = Instance.new("UICorner", closeButton)
    uiCornerClose.CornerRadius = UDim.new(0, 12)

    refreshButton.MouseButton1Click:Connect(function()
        maintenanceGui:Destroy()
        createLoadingScreen()
        createMaintenanceScreen()
    end)

    local function showConfirmPopup()
        if confirmGui then confirmGui:Destroy() end
        confirmGui = Instance.new("ScreenGui")
        confirmGui.Name = "ConfirmGui"
        confirmGui.ResetOnSpawn = false
        confirmGui.IgnoreGuiInset = true
        confirmGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
        confirmGui.Parent = CoreGui

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0.4, 0, 0.3, 0)
        frame.Position = UDim2.new(0.3, 0, 0.35, 0)
        frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        frame.BorderSizePixel = 0
        frame.ZIndex = 10000
        frame.Parent = confirmGui

        local uiCornerFrame = Instance.new("UICorner", frame)
        uiCornerFrame.CornerRadius = UDim.new(0, 15)

        local confirmText = Instance.new("TextLabel")
        confirmText.Size = UDim2.new(1, 0, 0.5, 0)
        confirmText.Position = UDim2.new(0, 0, 0, 0)
        confirmText.BackgroundTransparency = 1
        confirmText.Text = "Are you sure?"
        confirmText.TextColor3 = Color3.fromRGB(255, 255, 255)
        confirmText.TextScaled = true
        confirmText.Font = Enum.Font.GothamBold
        confirmText.ZIndex = 10001
        confirmText.Parent = frame

        local yesButton = Instance.new("TextButton")
        yesButton.Size = UDim2.new(0.4, 0, 0.3, 0)
        yesButton.Position = UDim2.new(0.05, 0, 0.6, 0)
        yesButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        yesButton.BorderSizePixel = 0
        yesButton.Text = "Yes"
        yesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        yesButton.TextScaled = true
        yesButton.Font = Enum.Font.GothamBold
        yesButton.ZIndex = 10001
        yesButton.Parent = frame

        local noButton = Instance.new("TextButton")
        noButton.Size = UDim2.new(0.4, 0, 0.3, 0)
        noButton.Position = UDim2.new(0.55, 0, 0.6, 0)
        noButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
        noButton.BorderSizePixel = 0
        noButton.Text = "No"
        noButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        noButton.TextScaled = true
        noButton.Font = Enum.Font.GothamBold
        noButton.ZIndex = 10001
        noButton.Parent = frame

        local uiCornerYes = Instance.new("UICorner", yesButton)
        uiCornerYes.CornerRadius = UDim.new(0, 12)
        local uiCornerNo = Instance.new("UICorner", noButton)
        uiCornerNo.CornerRadius = UDim.new(0, 12)

        yesButton.MouseButton1Click:Connect(function()
            -- Terminate script: remove all GUIs and disconnect anything needed
            if loadingGui then loadingGui:Destroy() end
            if maintenanceGui then maintenanceGui:Destroy() end
            if confirmGui then confirmGui:Destroy() end
            -- You can add any additional cleanup here
        end)

        noButton.MouseButton1Click:Connect(function()
            if confirmGui then confirmGui:Destroy() end
        end)
    end

    closeButton.MouseButton1Click:Connect(function()
        showConfirmPopup()
    end)
end

-- Run the loading screen then maintenance screen initially
createLoadingScreen()
createMaintenanceScreen()
